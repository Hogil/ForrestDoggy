<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="forrest.mapper.jm.GoodsMapper">

<sql id="basecolumn"> 
	GOODS_NUM, PT_NUM, CT_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CATEGORY, GOODS_MADE, GOODS_SIZE, GOODS_MANUAL, GOODS_INTRO, GOODS_TIME_LIMIT, GOODS_IMG
</sql>

	<resultMap type="forrest.domain.jm.GoodsDTO" id="baseGoods">
		<id column="GOODS_NUM" jdbcType="BIGINT" property="goodsNum" />
		<result column="PT_NUM" jdbcType="BIGINT" property="ptNum" />
		<result column="CT_NUM" jdbcType="BIGINT" property="ctNum" />
		<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
		<result column="GOODS_PRICE" jdbcType="BIGINT" property="goodsPrice" />
		<result column="GOODS_CATEGORY" jdbcType="VARCHAR" property="goodsCategory" />
		<result column="GOODS_MADE" jdbcType="VARCHAR" property="goodsMade" />
		<result column="GOODS_SIZE" jdbcType="VARCHAR" property="goodsSize" />
		<result column="GOODS_MANUAL" jdbcType="VARCHAR" property="goodsManual" />
		<result column="GOODS_INTRO" jdbcType="VARCHAR" property="goodsIntro" />
		<result column="GOODS_TIME_LIMIT" jdbcType="TIMESTAMP" property="goodsTimeLimit" />
		<result column="GOODS_IMG" jdbcType="VARCHAR" property="goodsImg" />
	</resultMap>
	
	<select id="getGoodsList" resultMap="baseGoods">
		select rn, GOODS_NUM, gPtNum, CT_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CATEGORY, GOODS_MADE, GOODS_SIZE, GOODS_MANUAL, GOODS_INTRO, GOODS_TIME_LIMIT, GOODS_IMG, pt_name
		from (select rownum rn, GOODS_NUM, gPtNum, CT_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CATEGORY, GOODS_MADE, GOODS_SIZE, GOODS_MANUAL, GOODS_INTRO, GOODS_TIME_LIMIT, GOODS_IMG, pt_name
			 from ( select 
						GOODS_NUM, g.PT_NUM gPtNum, CT_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CATEGORY, GOODS_MADE, GOODS_SIZE, GOODS_MANUAL, GOODS_INTRO, GOODS_TIME_LIMIT, GOODS_IMG, pt_name
					from Goods g join partner p
					on g.pt_num = p.pt_num
					<trim prefix="where" prefixOverrides="AND | OR">
						<if test="num != null ">
							and goods_num = #{num}
						</if>
					</trim>
					order by goods_NUM desc))
		where rn &gt;= #{startPage} and rn &lt;= #{endPage}
	</select> 
	
	<select id="getGoodsCount" resultType="int">
		select count(*) from GOODS 
	</select>

	<sql id="maxNum">
    select nvl(max(GOODS_NUM),0) + 1
    from goods
  	</sql>
  
	<insert id="goodsInsert" parameterType="forrest.domain.jm.GoodsDTO">
		insert into GOODS ( <include refid="basecolumn" />  )
		values ((<include refid="maxNum"/>), 
    			#{ptNum}, null, #{goodsName}, #{goodsPrice}, #{goodsCategory}, 
				#{goodsMade}, #{goodsSize}, #{goodsManual}, #{goodsIntro}, null, #{goodsImg}	)
	</insert>

	<delete id="goodsDelete" parameterType="string">
		delete from GOODS
		where goods_num = #{goodsNum}
    </delete>

	<select id="getPtGoodsList" resultMap="baseGoods">
		select goods_num, goods_name, goods_category, goods_made
		from goods
		where pt_num = #{ptNum}
	</select>
	



</mapper>